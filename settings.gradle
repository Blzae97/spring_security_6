rootProject.name = 'study'

includeProject(":spring-security-form-login", "spring-security-form-login")
includeProject(":spring-security-basic-login", "spring-security-basic-login")
includeProject(":spring-security-remember-me-login", "spring-security-remember-me-login")
includeProject(":spring-security-anonymous-login", "spring-security-anonymous-login")
includeProject(":spring-security-logout", "spring-security-logout")
includeProject(":spring-security-request-cache", "spring-security-request-cache")
includeProject(":spring-security-maximum-session", "spring-security-maximum-session")
includeProject(":spring-security-session-fixation", "spring-security-session-fixation")
includeProject(":spring-security-exception-handling", "spring-security-exception-handling")
includeProject(":spring-security-cors-test", "spring-security-cors-test")
includeProject(":spring-security-cors", "spring-security-cors")
includeProject(":spring-security-csrf", "spring-security-csrf")
includeProject(":spring-security-csrf-form", "spring-security-csrf-form")
includeProject(":spring-security-csrf-cookie", "spring-security-csrf-cookie")
includeProject(":spring-security-samesite", "spring-security-samesite")
includeProject(":spring-security-authrizationRequest", "spring-security-authrizationRequest")
includeProject(":spring-security-web-expression", "spring-security-web-expression")
includeProject(":spring-security-custom-web-expression", "spring-security-custom-web-expression")
includeProject(":spring-security-custom-requestmatcher", "spring-security-custom-requestmatcher")
includeProject(":spring-security-pre-aurothize", "spring-security-pre-aurothize")
includeProject(":spring-security-post-authorize", "spring-security-post-authorize")
includeProject(":spring-security-pre-filter", "spring-security-pre-filter")
includeProject(":spring-security-post-filter", "spring-security-post-filter")
includeProject(":spring-security-secured", "spring-security-secured")
includeProject(":spring-security-jsr250", "spring-security-jsr250")
includeProject(":spring-security-meta-annotation", "spring-security-meta-annotation")
includeProject(":spring-security-custom-bean-authorization", "spring-security-custom-bean-authorization")
includeProject(":spring-security-static-resource-management", "spring-security-static-resource-management")
includeProject(":spring-security-role-hierarchy", "spring-security-role-hierarchy")
includeProject(":spring-security-custom-authoirzation-manager", "spring-security-custom-authoirzation-manager")
includeProject(":spring-security-request-matcher-delegating-authorization-manager", "spring-security-request-matcher-delegating-authorization-manager")

def includeProject(String name, String path){
    include(name)
    if(path != null){
        project(name).projectDir = new File(path)
    }
}
include 'spring-security-custom-method-authorization-manager'

